javascriptで、次のプログラムを作成してください。
- グライダーに搭乗する順番を決める。
- 入力として、グライダー部員の名簿と、それぞれの部員の役職が与えられる。
- 同じ役職を持つものはなるべく離すようにする。
- 一人の部員に2つ以上の役職がある場合もある。
- アルゴリズムには遺伝的アルゴリズムを採用する。
- 評価関数は次のように考える：
    - 各役職に属するものどうしの順番の距離の2乗和
    - 上記をすべての役職について足し合わせ、これが大きいほどよい


さらに変更を加えます。htmlとjavascriptのみ出力してください。また、htmlとjavascriptは別々に出力してください。
javascriptファイルも、遺伝的アルゴリズムの部分を担う部分と、動的な入出力を担う部分に分けて出力すること。

# 条件
- 部員、役職に加え、上級生/下級生の区分を設けます。
- 下級生には、上級生が指導役としてつくことになります。
- 1人の上級生に複数の下級生がついてもよいこととします。
- さらに、上級生は下級生の搭乗補助のため、搭乗の順番が近くないほうが良いです。したがって、1人の上級生とそれに付く下級生は、同じ役職を持つグループのように扱い、搭乗順が近くならないようにします。
- アルゴリズムの上では、上級生・下級生のグループと役職を区別しないでください。すなわち、ある上級生１名と、その人につく下級生でグループをつくり、それを「Group_*」のような便宜的な役職名を与えることで上記の事項を実現してください。

# 入力
入力は、以下の手順に基づき行われます。
1. 上級生を「上級生」と書かれたtextareaに入力（改行区切り）
2. 下級生を「下級生」と書かれたtextareaに入力（改行区切り）
3. 「入力用の表を表示」と書かれたボタンを押すと、下に表が出てくる。
  |上級生|役職|被指導者|
|:---:|:---:|:---:|
|A|||
|B|||
...
4. 役職、被指導者の列をそれぞれユーザーが記入する。
    - 役職はテキストエリアをに入力する。
    - 被指導者は、縦に並べた下級生のネームプレートを、各上級生のところにドラッグアンドドロップすることで入力することにする。1人の上級生に、2人以上の下級生が付くことがあり得るということに注意せよ。
5. すべての記入が終了したら、その表の下にある「最適な順番を生成」ボタンをユーザーが押す。
6. 最終的な結果が表示される。

# 出力
- 最終的な出力には、上級生/下級生の区分を記載してください。
- 上級生の行には、その人につく下級生を記載してください。
- 各部員の役職も表示するようにして下さい。ただし、Group_*で表される、指導者をきめるための便宜的な役職は表示する必要はありませんが、この便宜的な役職名は、内部的に保持したままにしておいてください。今後の拡張で、再利用する可能性があります。
- 下級生の行には、その人が付く上級生を記載して下さい。








